// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protoc {

  /// <summary>Holder for reflection information generated from base.proto</summary>
  public static partial class BaseReflection {

    #region Descriptor
    /// <summary>File descriptor for base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpiYXNlLnByb3RvEgZwcm90b2MibAoLQmFzZU1lc3NhZ2USEQoJbWVzc2Fn",
            "ZUlkGAEgASgFEhYKDm1lc3NhZ2VDb250ZW50GAIgASgMEhMKC2lzQ2xpZW50",
            "TXNnGAMgASgIEgwKBGd1aWQYBCABKAMSDwoHaGFzaEtleRgFIAEoDWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protoc.BaseMessage), global::Protoc.BaseMessage.Parser, new[]{ "MessageId", "MessageContent", "IsClientMsg", "Guid", "HashKey" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///如果guid不为0，则根据guid在对应routine中处理消息
  ///如果guid为0，则根据hashKey来索引到通用的routine库中处理消息
  /// </summary>
  public sealed partial class BaseMessage : pb::IMessage<BaseMessage> {
    private static readonly pb::MessageParser<BaseMessage> _parser = new pb::MessageParser<BaseMessage>(() => new BaseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protoc.BaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseMessage(BaseMessage other) : this() {
      messageId_ = other.messageId_;
      messageContent_ = other.messageContent_;
      isClientMsg_ = other.isClientMsg_;
      guid_ = other.guid_;
      hashKey_ = other.hashKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseMessage Clone() {
      return new BaseMessage(this);
    }

    /// <summary>Field number for the "messageId" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private int messageId_;
    /// <summary>
    ///消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "messageContent" field.</summary>
    public const int MessageContentFieldNumber = 2;
    private pb::ByteString messageContent_ = pb::ByteString.Empty;
    /// <summary>
    ///消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageContent {
      get { return messageContent_; }
      set {
        messageContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isClientMsg" field.</summary>
    public const int IsClientMsgFieldNumber = 3;
    private bool isClientMsg_;
    /// <summary>
    ///用来区分是客户端发来的消息，还是服务器内部消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClientMsg {
      get { return isClientMsg_; }
      set {
        isClientMsg_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 4;
    private long guid_;
    /// <summary>
    ///如果是玩家的消息，会设置guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "hashKey" field.</summary>
    public const int HashKeyFieldNumber = 5;
    private uint hashKey_;
    /// <summary>
    ///如果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HashKey {
      get { return hashKey_; }
      set {
        hashKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageId != other.MessageId) return false;
      if (MessageContent != other.MessageContent) return false;
      if (IsClientMsg != other.IsClientMsg) return false;
      if (Guid != other.Guid) return false;
      if (HashKey != other.HashKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageId != 0) hash ^= MessageId.GetHashCode();
      if (MessageContent.Length != 0) hash ^= MessageContent.GetHashCode();
      if (IsClientMsg != false) hash ^= IsClientMsg.GetHashCode();
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (HashKey != 0) hash ^= HashKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MessageId);
      }
      if (MessageContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(MessageContent);
      }
      if (IsClientMsg != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsClientMsg);
      }
      if (Guid != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Guid);
      }
      if (HashKey != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(HashKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageId);
      }
      if (MessageContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageContent);
      }
      if (IsClientMsg != false) {
        size += 1 + 1;
      }
      if (Guid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (HashKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HashKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseMessage other) {
      if (other == null) {
        return;
      }
      if (other.MessageId != 0) {
        MessageId = other.MessageId;
      }
      if (other.MessageContent.Length != 0) {
        MessageContent = other.MessageContent;
      }
      if (other.IsClientMsg != false) {
        IsClientMsg = other.IsClientMsg;
      }
      if (other.Guid != 0L) {
        Guid = other.Guid;
      }
      if (other.HashKey != 0) {
        HashKey = other.HashKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageId = input.ReadInt32();
            break;
          }
          case 18: {
            MessageContent = input.ReadBytes();
            break;
          }
          case 24: {
            IsClientMsg = input.ReadBool();
            break;
          }
          case 32: {
            Guid = input.ReadInt64();
            break;
          }
          case 40: {
            HashKey = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
